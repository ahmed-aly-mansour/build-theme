{% comment %}
  Announcement Bar Section
  - Displays a customizable announcement message with an optional link and emoji.
{% endcomment %}

{%- liquid
  assign bg_color = section.settings.background_color
  assign text_color = section.settings.text_color
-%}

<style>
  @media screen and (max-width: 1024px){
    .announcement-bar{
      display: none;    
    }
  }
</style>

{% if section.settings.show_announcement and section.blocks.size > 0 %}
  <div 
    class="announcement-bar"
    style="background-color: {{ bg_color }}; color: {{ text_color }};"
    x-data="{
      idx: 0,
      total: {{ section.blocks.size }},
      interval: null,
      startAutoScroll() {
        if (this.total > 1) {
          this.interval = setInterval(() => {
            this.idx = (this.idx + 1) % this.total;
          }, ({{ section.settings.auto_rotate_interval | default: 4 }} * 1000));
        }
      },
      stopAutoScroll() {
        if (this.interval) clearInterval(this.interval);
        this.interval = null;
      }
    }"
    x-init="startAutoScroll()"
    @mouseenter="stopAutoScroll()"
    @mouseleave="startAutoScroll()"
    @focusin="stopAutoScroll()"
    @focusout="startAutoScroll()"
  >
    <div class="page-width announcement-bar__content">
      {% comment %} {% if section.blocks.size > 1 %}
        <button 
          @click="idx = idx === 0 ? total - 1 : idx - 1" 
          aria-label="Previous" 
          class="announcement-bar__arrow announcement-bar__arrow--prev"
          x-show="total > 1"
        >&larr;</button>
      {% endif %} {% endcomment %}
      <div class="announcement-bar__message">
        {% for block in section.blocks %}
          <div 
            x-show="idx === {{ forloop.index0 }}" 
            x-transition:fade.300ms
            {% unless forloop.first %}style="display:none"{% endunless %}
            :class="idx === {{ forloop.index0 }} ? 'slide-up' : ''"
          >
            {% if block.settings.link_text and block.settings.link_url %}
              <a href="{{ block.settings.link_url }}" class="announcement-bar__link">
                {{ block.settings.link_text }}
              </a>
            {% endif %}
            <span>{{ block.settings.text }}</span>
            {{ block.settings.emoji }}
          </div>
        {% endfor %}
      </div>
      {% comment %} {% if section.blocks.size > 1 %}
        <button 
          @click="idx = idx === total - 1 ? 0 : idx + 1" 
          aria-label="Next" 
          class="announcement-bar__arrow announcement-bar__arrow--next"
          x-show="total > 1"
        >&rarr;</button>
      {% endif %} {% endcomment %}
    </div>
  </div>
{% endif %}

<style>
  .announcement-bar {
    padding: 0px;
    text-align: center;
  }

  .announcement-bar__content {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    gap: 1em;
  }
  .announcement-bar__arrow {
    background: none;
    border: none;
    color: inherit;
    font-size: 1.2em;
    cursor: pointer;
    padding: 0 0.5em;
  }
  .announcement-bar__arrow {
    display: inline-block;
  }
  @media (max-width: 767px) {
    .announcement-bar__arrow {
      display: none;
    }
  }
  .announcement-bar__message > div {
    min-width: 200px;
  }
  .announcement-bar__message {
    margin: 0;
    font-size: 14px;
    font-weight: 500;
    line-height: 1.2;
    white-space: normal;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5em;
  }
  .announcement-bar__link {
    text-decoration: underline;
    text-underline-offset: 0.2em;
    display: inline;
    color: {{ text_color }};
  }
  .announcement-bar__link:hover {
    color: #f50a99;
  }
  .announcement-bar .page-width {
    max-width: 1200px;
  }
  .page-width {
    margin: 0 auto;
    padding: 0 15px;
  }

  .fade-in {
    animation: fadeInAnim 0.4s;
  }
  @keyframes fadeInAnim {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  .slide-up {
    animation: slideUpAnim 0.9s ease-out;
  }
  
  @keyframes slideUpAnim {
    from {
      opacity: 0;
      transform: translateY(100%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

{% schema %}
{
  "name": "Announcement Bar",
  "enabled_on": {
    "groups": ["header"]
  },
  "settings": [
    {
      "type": "checkbox",
      "id": "show_announcement",
      "label": "Show announcement",
      "default": true
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#FFFFFF"
    },
    {
      "type": "range",
      "id": "auto_rotate_interval",
      "label": "Auto-rotate interval (seconds)",
      "min": 2,
      "max": 15,
      "step": 1,
      "default": 4
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "Announcement",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "PROTECT HOCKEY'S FUTURE"
        },
        {
          "type": "text",
          "id": "link_text",
          "label": "Link text"
        },
        {
          "type": "url",
          "id": "link_url",
          "label": "Link URL"
        },
        {
          "type": "text",
          "id": "emoji",
          "label": "Emoji",
          "default": "ðŸš¨"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Announcement Bar",
      "blocks": [
        { "type": "announcement" }
      ]
    }
  ]
}
{% endschema %} 