{{ 'swiper7.4.1.min.css' | asset_url | stylesheet_tag }}
<script src="{{ "swiper7.4.1.min.js" | asset_url }}" defer="defer" id="swiper-script"></script>
<script src="{{ 'main-collection-slider.js' | asset_url }}" defer="defer"></script>



{% comment %} DYNAMIC STYLES {% endcomment %}
{%- style -%}
  .collection-filters-wrapper {
    display: flex;
    {%- if section.settings.enable_filtering and section.settings.filter_type == "vertical" -%}
      flex-direction: row;
    {%- elsif section.settings.enable_filtering and section.settings.filter_type == "horizontal" -%}
      flex-direction: column;
    {% else %}
      flex-direction: column;
    {%- endif -%}
  }

  .product-grid {
    display: grid;
    grid-template-columns: repeat({{ section.settings.columns_desktop }}, 1fr);
    row-gap: var(--grid-desktop-horizontal-spacing);
    column-gap: var(--grid-desktop-vertical-spacing);
  }

  #product-grid-{{ section.id }} {
    position: relative;
  }

  @media screen and (max-width: 990px) {
    .product-grid {
      grid-template-columns: repeat({{ section.settings.columns_mobile }}, 1fr);
    }
  }

  /* Button styling for product grid */
  .product-grid-{{ section.id }} .quick-add__submit {
    color: {{ section.settings.button_text_color }};
    background-color: {{ section.settings.button_background_color }};
    transition: all 0.2s ease;
  }
  
  .product-grid-{{ section.id }} .quick-add__submit:hover {
    background-color: {{ section.settings.button_background_color | color_modify: 'alpha', 0.8 }};
  }
  
  .product-grid-{{ section.id }} .quick-add__submit:after {
    box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset))
        {{ section.settings.button_border_color }},
      0 0 0 var(--buttons-border-width) rgba(var(--color-button), var(--alpha-button-background));
    transition: box-shadow 0.2s ease;
  }
  
  .product-grid-{{ section.id }} .quick-add__submit:hover:after {
    box-shadow: 0 0 0 calc(var(--buttons-border-width) + var(--border-offset))
        {{ section.settings.button_border_color | color_modify: 'alpha', 0.8 }},
      0 0 0 var(--buttons-border-width) rgba(var(--color-button), var(--alpha-button-background));
  }

  #shopify-section-{{ section.id }} .page-width{
    max-width: unset;
  }
{%- endstyle -%}

{% comment %} COMPONENT STYLES {% endcomment %}
{{ 'component-product-price.css' | asset_url | stylesheet_tag }}
{{ 'component-product-card.css' | asset_url | stylesheet_tag }}
{{ 'component-pagination.css' | asset_url | stylesheet_tag }}
{{ 'section-main-collection.css' | asset_url | stylesheet_tag }}

{%- if section.settings.quick_add == 'standard' -%}
  {{ 'component-quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'component-quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'component-modal-opener.js' | asset_url }}" defer="defer"></script>
{%- endif -%}


{% comment %} <div class="color-{{ section.settings.color_scheme }}">
  <div class="collection-hero color-{{ section.settings.color_scheme }}">
    <div class="collection-header">
      <div class="collection-hero__text-wrapper">
        <h1 class="collection-hero__title">{{ collection.title }}</h1>
        <span>|</span>
      <div class="item-counts-wrapper">
        <div id="results-count-{{ section.id }}" class="results-count">
          {%- if collection.products_count == collection.all_products_count -%}
            {{ collection.products_count }} ITEMS
          {% else %}
            {{ collection.products_count }} of {{ collection.all_products_count }}
          {% endif %}
        </div>
        <div id="loading-spinner-{{ section.id }}" class="loading-overlay__spinner"></div>
      </div>
    </div>
    
    <div class="sorting-wrapper">
      {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
        <div class="mobile-filters-drawer medium-hide large-up-hide">
          {%- render 'component-filters-drawer',
            results: collection,
            enable_sorting: section.settings.enable_sorting,
            enable_filtering: section.settings.enable_filtering
          -%}
        </div>
      {%- endif -%}
      {%- if section.settings.enable_filtering and section.settings.filter_type == 'horizontal' -%}
        <div class="horizontal-filters__parent-wrapper">
          {% render 'component-filters-horizontal', results: collection %}
          <div class="mobile-horizontal-filter medium-hide large-up-hide">
            {%- render 'component-filters-drawer',
              results: collection,
              enable_sorting: section.settings.enable_sorting,
              enable_filtering: section.settings.enable_filtering
            -%}
          </div>
        </div>
      {% elsif section.settings.enable_filtering and section.settings.filter_type == 'drawer' %}
        <div class="horizontal-filters__parent-wrapper">
          {% render 'component-filters-drawer',
            results: collection,
            enable_sorting: section.settings.enable_sorting,
            enable_filtering: section.settings.enable_filtering
          %}
        </div>
      {% endif %}
      <div class="child-sorting-wrapper">
        {%- if section.settings.enable_sorting -%}
          {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
          <div id="sort-by-{{ section.id }}" class="facet-filters__field small-hide">
            <h2 class="facet-filters__label">
              <label for="SortBy">Sort by:</label>
            </h2>
            
            <div class="sort-by-container">
                <select
                data-render-section="filters-form"
                name="sort_by"
                {% if section.settings.filter_type == 'drawer' %}
                  form="filters-form-drawer"
                {% elsif section.settings.filter_type == 'horizontal' or section.settings.filter_type == 'vertical' %}
                  form="filters-form"
                {% endif %}
                id="SortBy"
                class="facet-filters__sort"
              >
                {%- for option in collection.sort_options -%}
                  <option
                    value="{{ option.value | escape }}"
                    {% if option.value == sort_by %}
                      selected="selected"
                    {% endif %}
                  >
                    {{ option.name | escape }}
                  </option>
                {%- endfor -%}
              </select>

              <span class="sort-by-icon">
                {{ 'icon-chevron-down.svg' | inline_asset_content }}
              </span>
          </div>
          </div>
        {%- endif -%}
       
      </div>
    </div>
  </div>
    
  
    <div class="collection-header-menu">
      <ul>
        {% for block in section.blocks %}
          {% if block.settings.collection %}
            <li 
              {% if request.path contains block.settings.collection.handle %}
                class="is-active"
              {% endif %}
            >
              <a href="{{ block.settings.collection.url }}">
                {{ block.settings.collection.title }}
              </a>
            </li>          
          {% endif %}
        {% endfor %}
      </ul>
    </div>
  </div>
  
  <div class="collection-info-wrapper section-{{ section.id }}-padding">
    <collection-info
      data-section="{{ section.id }}"
    >
      <div class="filter-type-{{ section.settings.filter_type | escape | downcase }}">
        {%- paginate collection.products by section.settings.products_per_page -%}
          <div class="main-content">
            <div class="collection-filters-wrapper">
              {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
                {% render 'component-filters-sidebar', results: collection, collapse_filters: section.settings.collapse_filters %}
              {% endif %}
              <div class="product-grid-container">
                
                <div id="active-filter-group-{{ section.id }}" class="active-filter-group__item-wrapper">
                  {% liquid
                    assign has_active_filters = false
                    for f in collection.filters
                      if f.type == 'price_range'
                        if f.min_value.value > 0 or f.max_value.value < f.range_max
                          assign has_active_filters = true
                        endif
                      else
                        if f.active_values.size > 0
                          assign has_active_filters = true
                        endif
                      endif
                    endfor
                  %}

                  {%- for f in collection.filters -%}
                    {% if f.type == 'price_range' and f.min_value.value > 0 or f.max_value.value < f.range_max %}
                      {% assign min = f.min_value.value %}
                      {% assign max = f.max_value.value %}
                      <div class="filter active-filter-item">
                        <span>
                          {{- f.label | escape }}: {{ min | money -}}
                          - {{ max | money -}}
                        </span>
                        <div
                          class="filter-close"
                          data-render-section-url="{{ f.url_to_remove }}"
                        >
                          {{- 'icon-close.svg' | inline_asset_content -}}
                        </div>
                      </div>
                    {% else %}
                      {% for v in f.active_values %}
                        <div class="filter active-filter-item">
                          <span>{{ f.label | escape }}: {{ v.label | escape -}}</span>
                          <div
                            class="filter-close"
                            data-render-section-url="{{ v.url_to_remove }}"
                          >
                            {{- 'icon-close.svg' | inline_asset_content -}}
                          </div>
                        </div>
                      {% endfor %}
                    {% endif %}
                  {%- endfor -%}

                  {% if has_active_filters %}
                    <div class="filter active-filter-item active-filter-clear-all" data-render-section-url="{{ collection.url }}">
                      <span>Clear all filters</span>
                    </div>
                  {% endif %}
                </div>

                <div class="product-grid-wrapper product-grid-{{ section.id }}" id="product-grid-{{ section.id }}">
                  <div id="loading-overlay-{{ section.id }}" class="loading-overlay"></div>
                  <div class="product-grid">
                    {%- if collection.products.size == 0 -%}
                      <p>Nothing Here</p>
                    {%- else -%}
                      {%- for product in collection.products -%}
                        {% render 'component-product-card',
                          card_product: product,
                          show_vendor: section.settings.show_vendor,
                          enable_swatches: section.settings.enable_swatches,
                          swatch_trigger: section.settings.swatch_trigger,
                          swatch_type: section.settings.swatch_type,
                          media_aspect_ratio: section.settings.image_ratio,
                          quick_add: section.settings.quick_add,
                          section_id: section.id,
                          button_text_color: section.settings.button_text_color,
                          button_border_color: section.settings.button_border_color
                        %}
                      {%- endfor -%}
                    {%- endif -%}
                  </div>
                  {%- if paginate.pages > 1 -%}
                    {% render 'component-pagination', paginate: paginate, anchor: '' %}
                  {%- endif -%}
                </div>
              </div>
            </div>
          </div>
        {%- endpaginate -%}
      </div>
    </collection-info>
  </div>
</div> {% endcomment %}

<div class="color-{{ section.settings.color_scheme }}">
  <div class="collection-info-wrapper section-{{ section.id }}-padding">
    <collection-info
      data-section="{{ section.id }}"
    >
      <div class="filter-type-{{ section.settings.filter_type | escape | downcase }}">
        {%- paginate collection.products by section.settings.products_per_page -%}
          <div class="main-content">
            <div class="collection-filters-wrapper">
              {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
                {% render 'component-filters-sidebar', results: collection, collapse_filters: section.settings.collapse_filters %}
              {% endif %}
              <div class="product-grid-container">
                <div class="sorting-wrapper">
                  {%- if section.settings.enable_filtering and section.settings.filter_type == 'vertical' -%}
                    <div class="mobile-filters-drawer medium-hide large-up-hide">
                      {%- render 'component-filters-drawer',
                        results: collection,
                        enable_sorting: section.settings.enable_sorting,
                        enable_filtering: section.settings.enable_filtering
                      -%}
                    </div>
                  {%- endif -%}
                  {%- if section.settings.enable_filtering and section.settings.filter_type == 'horizontal' -%}
                    <div class="horizontal-filters__parent-wrapper">
                      {% render 'component-filters-horizontal', results: collection %}
                      <div class="mobile-horizontal-filter medium-hide large-up-hide">
                        {%- render 'component-filters-drawer',
                          results: collection,
                          enable_sorting: section.settings.enable_sorting,
                          enable_filtering: section.settings.enable_filtering
                        -%}
                      </div>
                    </div>
                  {% elsif section.settings.enable_filtering and section.settings.filter_type == 'drawer' %}
                    <div class="horizontal-filters__parent-wrapper" style="display: none;">
                      {% render 'component-filters-drawer',
                        results: collection,
                        enable_sorting: section.settings.enable_sorting,
                        enable_filtering: section.settings.enable_filtering
                      %}
                    </div>
                  {% endif %}
                  <div class="collection-header">
                    <div class="collection-hero color-{{ section.settings.color_scheme }}">
                      <div class="collection-hero__text-wrapper">
                        <h1 class="collection-hero__title">{{ collection.title }}</h1>
                      </div>
                    </div>
                     <span class="small-hide">|</span>
                    <div class="item-counts-wrapper">
                      <div id="results-count-{{ section.id }}" class="results-count">
                        {%- if collection.products_count == collection.all_products_count -%}
                          {{ collection.products_count }} products
                        {% else %}
                          {{ collection.products_count }} of {{ collection.all_products_count }}
                        {% endif %}
                      </div>
                      <div id="loading-spinner-{{ section.id }}" class="loading-overlay__spinner"></div>
                    </div>
                  </div>

                  

                  <div class="child-sorting-wrapper">
                    {%- if section.settings.enable_sorting -%}
                      {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                      <div id="sort-by-{{ section.id }}" class="facet-filters__field">
                        <h2 class="facet-filters__label">
                          <label for="SortBy">Sort by:</label>
                        </h2>
                        
                        {% comment %} <select
                          data-render-section="filters-form"
                          name="sort_by"
                          {% if section.settings.filter_type == 'drawer' %}
                            form="filters-form-drawer"
                          {% elsif section.settings.filter_type == 'horizontal' or section.settings.filter_type == 'vertical' %}
                            form="filters-form"
                          {% endif %}
                          id="SortBy"
                          class="facet-filters__sort"
                        >
                          {%- for option in collection.sort_options -%}
                            <option
                              value="{{ option.value | escape }}"
                              {% if option.value == sort_by %}
                                selected="selected"
                              {% endif %}
                            >
                              {{ option.name | escape }}
                            </option>
                          {%- endfor -%}
                        </select> {% endcomment %}

                        <div x-data="{ open: false }" class="custom-sort-wrapper" @click.outside="open = false">
                          <!-- Hidden form -->
                          <form id="filters-form" method="GET">
                            <input type="hidden" name="sort_by" x-ref="sortInput" value="{{ sort_by }}">
                          </form>
                        
                          <!-- Trigger -->
                          <div class="custom-sort-trigger" @click="open = !open">
                            {% assign active_option = collection.sort_options | where: "value", sort_by | first %}
                            {{ active_option.name }}
                          </div>
                        
                          <!-- Dropdown -->
                          <ul class="custom-sort-dropdown" x-show="open" x-transition :class="{ 'open': open }">
                            {% unless sort_by == 'manual' %}
                              {% assign selected_option = '' %}

                                {% for option in collection.sort_options %}
                                  {% if option.value == sort_by %}
                                    {% assign selected_option = option.name %}
                                  {% endif %}
                                {% endfor %}

                              <li
                                class="custom-sort__option active"
                                @click.prevent="
                                  $refs.sortInput.value = '{{ sort_by }}';
                                  document.getElementById('filters-form').submit();
                                  open = false;
                                "
                              >
                                {{ selected_option }}
                              </li>
                            {% endunless %}

                            {%- for option in collection.sort_options -%}
                              {% unless option.value == sort_by %}
                                <li
                                  class="custom-sort__option{% if option.value == sort_by %} active{% endif %}"
                                  @click.prevent="
                                    $refs.sortInput.value = '{{ option.value }}';
                                    document.getElementById('filters-form').submit();
                                    open = false;
                                  "
                                >
                                  {{ option.name }}
                                </li>
                              {% endunless %}
                            {%- endfor -%}
                          </ul>
                          <span class="sort-by-icon icon-up" x-show="open" x-transition @click="open = false">
                            {{ 'icon-chevron-up.svg' | inline_asset_content }}
                          </span>
                          <span class="sort-by-icon" :class="{ 'open': open }" @click="open = true">
                            {{ 'icon-chevron-down.svg' | inline_asset_content }}
                          </span>
                        </div>
                        
                        
                        

                      </div>
                    {%- endif -%}
                    
                  </div>
                </div>

              <main-collection-menu data-section-id="{{ section.id }}" class="main-collection-menu-section" style="position: relative;">
                <!-- Slider main container -->
                <div class="collection-header-menu swiper" id="main-collection-menu-{{ section.id }}">
                  <!-- Additional required wrapper -->
                  <div class="swiper-wrapper">
                    <!-- Slides -->
                    {% for block in section.blocks %}
                      {% if block.settings.collection %}
                        <div class="swiper-slide">
                          <div class="swiper-div {% if request.path contains block.settings.collection.handle %}is-active{% endif %}"
                          >
                            <a href="{{ block.settings.collection.url }}">
                              {{ block.settings.collection.title }}
                            </a>          
                          </div>
                        </div>
                        {% endif %}
                      {% endfor %}
                  </div>
                  <!-- If we need pagination -->
                  <div class="swiper-pagination"></div>

                  <!-- If we need navigation buttons -->
                  <div class="swiper-button-prev"></div>
                  <div class="swiper-button-next">
                    {% comment %} <button>></button> {% endcomment %}
                  </div>

                  <!-- If we need scrollbar -->
                  <div class="swiper-scrollbar"></div>
                </div>
              </main-collection-menu>


                <div id="active-filter-group-{{ section.id }}" class="active-filter-group__item-wrapper">
                  {% liquid
                    assign has_active_filters = false
                    for f in collection.filters
                      if f.type == 'price_range'
                        if f.min_value.value > 0 or f.max_value.value < f.range_max
                          assign has_active_filters = true
                        endif
                      else
                        if f.active_values.size > 0
                          assign has_active_filters = true
                        endif
                      endif
                    endfor
                  %}

                  {%- for f in collection.filters -%}
                    {% if f.type == 'price_range' and f.min_value.value > 0 or f.max_value.value < f.range_max %}
                      {% assign min = f.min_value.value %}
                      {% assign max = f.max_value.value %}
                      <div class="filter active-filter-item">
                        <span>
                          {{- f.label | escape }}: {{ min | money -}}
                          - {{ max | money -}}
                        </span>
                        <div
                          class="filter-close"
                          data-render-section-url="{{ f.url_to_remove }}"
                        >
                          {{- 'icon-close.svg' | inline_asset_content -}}
                        </div>
                      </div>
                    {% else %}
                      {% for v in f.active_values %}
                        <div class="filter active-filter-item">
                          <span>{{ f.label | escape }}: {{ v.label | escape -}}</span>
                          <div
                            class="filter-close"
                            data-render-section-url="{{ v.url_to_remove }}"
                          >
                            {{- 'icon-close.svg' | inline_asset_content -}}
                          </div>
                        </div>
                      {% endfor %}
                    {% endif %}
                  {%- endfor -%}

                  {% if has_active_filters %}
                    <div class="filter active-filter-item active-filter-clear-all" data-render-section-url="{{ collection.url }}">
                      <span>Clear all filters</span>
                    </div>
                  {% endif %}
                </div>
                
                

                <div class="product-grid-wrapper" id="product-grid-{{ section.id }}">
                  <div id="loading-overlay-{{ section.id }}" class="loading-overlay"></div>
                  <div class="product-grid">
                    {%- if collection.products.size == 0 -%}
                      <p>Nothing Here</p>
                    {%- else -%}
                      

                      {% assign has_breakout_cards = collection.metafields.custom.breakout_card.value %}
                      {% assign products_count = 0 %}

                      {%- for product in collection.products -%}
                        
                        {% if has_breakout_cards %}
                          {% for breakout_card in has_breakout_cards %}
                              {% if breakout_card.number_of_skipped_products.value == products_count %}
                              <div class="breakout-card product-card">
                                <a href="{{breakout_card.button_link }}" style="text-decoration: none;color: unset;">
                                <div class="breakout-card-text-container"
                                  {% if breakout_card.image != blank%}
                                    style="background: url({{ breakout_card.image | image_url }});"
                                  {% else %}
                                    style="background: #ebdadb;"
                                  {% endif %}
                                >
                                  <h2 class="breakout-card-title">{{ breakout_card.title }}</h2>
                                  <p class="breakout-card-description">{{ breakout_card.description }}</p>
                                  <a href="{{ breakout_card.button_link }}" class="breakout-card-button">{{ breakout_card.button_label }}</a>
                                </div>
                              </a>
                              </div>
                            {% endif %}
                          {% endfor %}
                        {% endif %}

                        {% render 'component-product-card',
                          card_product: product,
                          show_vendor: section.settings.show_vendor,
                          enable_swatches: section.settings.enable_swatches,
                          swatch_trigger: section.settings.swatch_trigger,
                          swatch_type: section.settings.swatch_type,
                          media_aspect_ratio: section.settings.image_ratio,
                          quick_add: section.settings.quick_add
                          section_id: section.id
                        %}
                        {% assign products_count = products_count | plus: 1 %}
                      {%- endfor -%}
                    {%- endif -%}
                  </div>
                  {%- if paginate.pages > 1 -%}
                    {% render 'component-pagination', paginate: paginate, anchor: '' %}
                  {%- endif -%}
                </div>
              </div>
            </div>
          </div>
        {%- endpaginate -%}
      </div>
    </collection-info>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    document.querySelectorAll('.custom-sort__option').forEach(function (item) {
      item.addEventListener('click', function () {
        const sortValue = this.dataset.value;
        const formId = this.closest('[data-form-id]').dataset.formId;
        const form = document.getElementById(formId);

        if (!form) return;

        // Update or create sort input
        let input = form.querySelector('input[name="sort_by"]');
        if (!input) {
          input = document.createElement('input');
          input.type = 'hidden';
          input.name = 'sort_by';
          form.appendChild(input);
        }

        input.value = sortValue;
        form.submit();
      });
    });
  });
</script>


<script src="{{ 'component-collection-info.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'component-product-card.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'component-filters-price-range.js' | asset_url }}" defer="defer"></script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "info": "t:sections.main-collection-product-grid.settings.quick_add.info",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "enable_swatches",
      "default": true,
      "label": "Enable swatches",
      "info": "Show variant swatches on product cards"
    },
    {
      "type": "select",
      "id": "swatch_type",
      "label": "Swatch type",
      "options": [
        {
          "value": "color",
          "label": "Color based"
        },
        {
          "value": "image",
          "label": "Image based"
        }
      ],
      "default": "image",
      "info": "Display swatches based on color values or variant images"
    },
    {
      "type": "text",
      "id": "swatch_trigger",
      "label": "Swatch trigger",
      "default": "Color",
      "info": "Enter the product option name to use for variant swatches (e.g. 'Color', 'Size', etc.)"
    },
    {
      "type": "header",
      "content": "Button Styling"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#838383"
    },
    {
      "type": "color",
      "id": "button_border_color",
      "label": "Button border color",
      "default": "#838383"
    },
    {
      "type": "color",
      "id": "button_background_color",
      "label": "Button background color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "collapse_filters",
      "default": true,
      "label": "Collapse filters by default",
      "info": "This supports only the vertical option"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "collection_item",
      "name": "Collection Menu Item",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collections Menu",
      "blocks": [
        { "type": "collection_item" },
        { "type": "collection_item" },
        { "type": "collection_item" },
        { "type": "collection_item" },
        { "type": "collection_item" },
        { "type": "collection_item" }
      ]
    }
  ]
}
{% endschema %}
